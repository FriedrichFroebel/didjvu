from _typeshed import Incomplete

re_directive: Incomplete
re_for_loop: Incomplete
re_if: Incomplete
re_elif: Incomplete
re_def: Incomplete
re_call: Incomplete
re_exec: Incomplete
re_comment: Incomplete
re_clean_whitespace: Incomplete

class ParserException(Exception):
    def __init__(self, lineno, s) -> None: ...

class Template:
    def __init__(self, filename: Incomplete | None = ...) -> None: ...
    def parse_file(self, filename) -> None: ...
    def parse_string(self, template) -> None: ...
    file: Incomplete
    line: Incomplete
    lineno: int
    functions: Incomplete
    tree: Incomplete
    def parse(self, file) -> None: ...
    def parser_get(self): ...
    def parser_eat(self, chars) -> None: ...
    def parser_exception(self, s, e: Incomplete | None = ...) -> None: ...
    def execute_file(self, filename, data=...) -> None: ...
    def execute_string(self, data=...): ...
    def execute_stdout(self, data=...) -> None: ...
    def execute(self, stream=..., data=...) -> None: ...

class TemplateNode:
    parent: Incomplete
    s: Incomplete
    node_list: Incomplete
    def __init__(self, parent, s) -> None: ...
    def add_node(self, node): ...
    def execute(self, stream, data) -> None: ...

class TopLevelTemplateNode(TemplateNode):
    def __init__(self, parent) -> None: ...
    def add_node(self, node): ...

class ForTemplateNode(TemplateNode):
    vars_temp: Incomplete
    vars: Incomplete
    expression: Incomplete
    def __init__(self, parent, s) -> None: ...
    def execute(self, stream, data) -> None: ...

class IfTemplateNode(TemplateNode):
    else_node: Incomplete
    expression: Incomplete
    def __init__(self, parent, s) -> None: ...
    def add_node(self, node): ...
    def execute(self, stream, data) -> None: ...

class ElifTemplateNode(IfTemplateNode):
    else_node: Incomplete
    expression: Incomplete
    def __init__(self, parent, s) -> None: ...

class ElseTemplateNode(TemplateNode): ...

class FunctionTemplateNode(TemplateNode):
    function_name: Incomplete
    vars_temp: Incomplete
    vars: Incomplete
    def __init__(self, parent, s) -> None: ...
    def execute(self, stream, data) -> None: ...
    def call(self, args, stream, data) -> None: ...

class LeafTemplateNode(TemplateNode):
    parent: Incomplete
    s: Incomplete
    def __init__(self, parent, s) -> None: ...
    def execute(self, stream, data) -> None: ...

class CommentTemplateNode(LeafTemplateNode):
    def execute(self, stream, data) -> None: ...

class ExpressionTemplateNode(LeafTemplateNode):
    def execute(self, stream, data) -> None: ...

class ExecTemplateNode(LeafTemplateNode):
    s: Incomplete
    def __init__(self, parent, s) -> None: ...
    def execute(self, stream, data) -> None: ...

class CallTemplateNode(LeafTemplateNode):
    function_name: Incomplete
    vars: Incomplete
    def __init__(self, parent, s) -> None: ...
    def execute(self, stream, data) -> None: ...

template_factory_type_map: Incomplete
template_factory_types: Incomplete

def TemplateNodeFactory(parent): ...
