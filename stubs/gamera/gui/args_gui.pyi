from _typeshed import Incomplete
from gamera import args as args, enums as enums, util as util
from gamera.args import CNoneDefault as CNoneDefault, DEFAULT_MAX_ARG_NUMBER as DEFAULT_MAX_ARG_NUMBER
from gamera.core import RGBPixel as RGBPixel
from gamera.gui import compat_wx as compat_wx, gui_util as gui_util

class ArgInvalidException(Exception): ...

class Args:
    window: Incomplete
    box: Incomplete
    border: Incomplete
    gs: Incomplete
    def setup(self, parent, locals, docstring: str = ..., function: Incomplete | None = ...) -> None: ...
    def get_args_string(self): ...
    def get_args(self): ...
    wizard: Incomplete
    function: Incomplete
    def show(self, parent: Incomplete | None = ..., locals=..., function: Incomplete | None = ..., wizard: int = ..., docstring: str = ...): ...

class _NumericValidator(compat_wx.Validator):
    rng: Incomplete
    name: Incomplete
    def __init__(self, name: str = ..., range: Incomplete | None = ...) -> None: ...
    def Clone(self): ...
    def show_error(self, s) -> None: ...
    def Validate(self, win): ...
    def OnChar(self, event) -> None: ...
    def TransferToWindow(self): ...
    def TransferFromWindow(self): ...

class _IntValidator(_NumericValidator): ...

class Int:
    control: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get(self): ...
    def get_string(self): ...

class _RealValidator(_NumericValidator): ...

class Real:
    control: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get(self): ...
    def get_string(self): ...

class String:
    control: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get(self): ...
    def get_string(self): ...

class Class:
    locals: Incomplete
    def determine_choices(self, locals): ...
    klass: Incomplete
    control: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get(self): ...
    def get_string(self): ...

class _Vector(Class):
    klass: Incomplete
    choices: Incomplete
    control: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get(self): ...
    def get_string(self): ...
    def is_vector(self, val): ...
    locals: Incomplete
    def determine_choices(self, locals): ...

class ImageType(Class):
    locals: Incomplete
    def determine_choices(self, locals): ...

class Rect(Class): ...

class Choice:
    control: Incomplete
    default: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get_string(self): ...
    def get(self): ...

class ChoiceString:
    control: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get_string(self): ...
    def get(self): ...

class _Filename:
    control: Incomplete
    text: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ..., text: Incomplete | None = ...): ...
    def get_string(self): ...
    def get(self): ...

class FileOpen(_Filename):
    def OnBrowse(self, event) -> None: ...
    def get(self): ...
    def get_string(self): ...

class FileSave(_Filename):
    def OnBrowse(self, event) -> None: ...

class Directory(_Filename):
    def OnBrowse(self, event) -> None: ...
    def get(self): ...
    def get_string(self): ...

class Radio:
    control: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get_string(self): ...
    def get(self): ...

class Check:
    control: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get_string(self): ...
    def get(self): ...

class Region(Class):
    klass: Incomplete
    def determine_choices(self, locals): ...

class RegionMap(Class):
    klass: Incomplete
    def determine_choices(self, locals): ...

class ImageInfo(Class):
    klass: Incomplete
    def determine_choices(self, locals): ...

class ImageList(Class):
    klass: Incomplete
    def determine_choices(self, locals): ...

class Info:
    control: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get_string(self) -> None: ...
    get = get_string

class Pixel(_Filename):
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def OnBrowse(self, event) -> None: ...
    def get_string(self): ...
    def get(self): ...

class PointVector:
    klass: Incomplete
    def determine_choices(self, locals): ...

class Point:
    control: Incomplete
    control_x: Incomplete
    control_y: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get(self): ...
    def get_string(self): ...

class Dim(Point):
    def get(self): ...
    def get_string(self): ...

class FloatPoint:
    control: Incomplete
    control_x: Incomplete
    control_y: Incomplete
    def get_control(self, parent, locals: Incomplete | None = ...): ...
    def get(self): ...
    def get_string(self): ...
