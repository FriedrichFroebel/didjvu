from gamera.args import *
from gamera.core import *
from gamera.gui.gamera_display import *
import wx
from _typeshed import Incomplete
from gamera import gamera_xml as gamera_xml, plugin as plugin, util as util
from gamera.classify import BoundingBoxGroupingFunction as BoundingBoxGroupingFunction, ClassifierError as ClassifierError, InteractiveClassifier as InteractiveClassifier, ShapedGroupingFunction as ShapedGroupingFunction
from gamera.gui import compat_wx as compat_wx, gui_util as gui_util, image_menu as image_menu, rule_engine_runner as rule_engine_runner, toolbar as toolbar
from gamera.gui.args_gui import args as args
from gamera.symbol_table import SymbolTable as SymbolTable

class ExtendedMultiImageDisplay(MultiImageDisplay):
    toplevel: Incomplete
    last_image_no: Incomplete
    last_sort: Incomplete
    display_row_labels: bool
    def __init__(self, toplevel, parent) -> None: ...
    def delete_selected(self) -> None: ...
    def SafeClearSelection(self) -> None: ...
    def resize_grid(self, do_auto_size: bool = ...): ...
    def set_labels(self): ...
    def RefreshSelected(self): ...

class ExtendedMultiImageWindow(MultiImageWindow):
    toplevel: Incomplete
    titlebar_text: Incomplete
    titlebar_button: Incomplete
    def __init__(self, toplevel, parent: Incomplete | None = ..., id: int = ..., size=...) -> None: ...
    def set_close_button(self, mode) -> None: ...

class ClassifierMultiImageDisplay(ExtendedMultiImageDisplay): ...

class ClassifierMultiImageWindow(ExtendedMultiImageWindow):
    pane_name: str
    def __init__(self, toplevel, parent: Incomplete | None = ..., id: int = ..., size=...) -> None: ...
    def get_display(self): ...

class PageMultiImageDisplay(ExtendedMultiImageDisplay):
    def do_auto_move(self, state) -> None: ...
    def move_back(self) -> None: ...
    updating: bool
    def find_glyphs_in_rect(self, x1, y1, x2, y2, shift) -> None: ...

class PageMultiImageWindow(ExtendedMultiImageWindow):
    pane_name: str
    def __init__(self, toplevel, parent: Incomplete | None = ..., id: int = ..., size=...) -> None: ...
    def get_display(self): ...

class ClassifierImageDisplay(ImageDisplay):
    toplevel: Incomplete
    def __init__(self, toplevel, parent) -> None: ...

class ClassifierImageWindow(ImageWindow):
    toplevel: Incomplete
    def __init__(self, toplevel, parent: Incomplete | None = ..., id: int = ...) -> None: ...
    def get_display(self): ...

class ClassifierFrame(ImageFrameBase):
    status_bar_description: Incomplete
    classifier_collection_filename: Incomplete
    page_collection_filename: Incomplete
    state_directory: Incomplete
    auto_move: Incomplete
    image: Incomplete
    menu: Incomplete
    default_segmenter: int
    status_bar_mapping: Incomplete
    splitterv: Incomplete
    splitterhr0: Incomplete
    splitterhr1: Incomplete
    splitterhl: Incomplete
    single_iw: Incomplete
    multi_iw: Incomplete
    class_iw: Incomplete
    symbol_editor: Incomplete
    rule_engine_runner: Incomplete
    def __init__(self, classifier, symbol_table=..., parent: Incomplete | None = ..., id: int = ..., title: str = ..., owner: Incomplete | None = ...) -> None: ...
    def create_menus(self) -> None: ...
    def is_dirty(self): ...
    is_dirty: Incomplete
    def get_other_multi(self, id): ...
    def set_image(self, page_collection, image: Incomplete | None = ..., weak: bool = ...) -> None: ...
    def set_multi_image(self, page_collection) -> None: ...
    def set_single_image(self, image: Incomplete | None = ..., weak: bool = ...) -> None: ...
    def unsplit_editors(self, display) -> None: ...
    def split_editors(self) -> None: ...
    def update_symbol_table(self) -> None: ...
    def add_to_database(self, glyphs) -> None: ...
    def remove_from_database(self, glyphs) -> None: ...
    def get_all_selected(self): ...
    def display_cc(self, cc) -> None: ...
    def find_glyphs_in_rect(self, x1, y1, x2, y2, shift) -> None: ...
    def set_number_of_glyphs_selected_status(self, number) -> None: ...
    def set_glyph_ids_status(self, ids) -> None: ...
    def classifier_collection_length_change_callback(self, length) -> None: ...
    def page_collection_length_change_callback(self, length) -> None: ...
    def guess_glyph(self, glyph): ...
    def classify_manual(self, id) -> None: ...
    def set_glyph_ids_status(self, ids) -> None: ...
    def do_auto_move(self): ...
    def move_back(self) -> None: ...
    def set_label_display(self, symbol) -> None: ...
    def display_label_at_cell(self, row, col, label) -> None: ...
    def refresh(self) -> None: ...

class SymbolTreeCtrl(wx.TreeCtrl):
    toplevel: Incomplete
    editing: int
    root: Incomplete
    def __init__(self, toplevel, parent, id, pos, size, style) -> None: ...
    def OnCompareItems(self, item1, item2): ...
    def set_label_display(self, symbol) -> None: ...
    def symbol_table_add_callback(self, tokens) -> None: ...
    def symbol_table_remove_callback(self, tokens) -> None: ...

class SymbolTableEditorPanel(wx.Panel):
    toplevel: Incomplete
    box: Incomplete
    text: Incomplete
    tree: Incomplete
    def __init__(self, symbol_table, toplevel, parent: Incomplete | None = ..., id: int = ...) -> None: ...
