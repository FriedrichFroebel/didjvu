import wx
from _typeshed import Incomplete
from gamera.gui import compat_wx as compat_wx, gamera_icons as gamera_icons, gui_util as gui_util, toolbar as toolbar
from matplotlib import backend_bases
from sys import stderr as stderr

def plot(*args, **kwargs) -> None: ...
show_figure = plot
matplotlib_installed: bool
cursord: Incomplete

class GameraPlotToolbar(backend_bases.NavigationToolbar2, toolbar.ToolBar):
    canvas: Incomplete
    statbar: Incomplete
    def __init__(self, parent, canvas) -> None: ...
    def save(self, evt) -> None: ...
    def print_plot(self, evt) -> None: ...
    def zoom(self, evt) -> None: ...
    def pan(self, evt) -> None: ...
    def set_cursor(self, cursor) -> None: ...
    def release(self, event) -> None: ...
    def dynamic_update(self) -> None: ...
    lastrect: Incomplete
    def draw_rubberband(self, event, x0, y0, x1, y1) -> None: ...
    def set_status_bar(self, statbar) -> None: ...
    def set_message(self, s) -> None: ...

class GameraPlotDropTarget(compat_wx.DropTarget):
    df: Incomplete
    data: Incomplete
    figure: Incomplete
    def __init__(self, figure) -> None: ...
    def OnEnter(self, *args): ...
    def OnDrop(self, *args): ...
    def OnDragOver(self, *args): ...
    def OnData(self, x, y, d): ...

class GameraPlotFrame(wx.Frame):
    num: Incomplete
    figure: Incomplete
    canvas: Incomplete
    toolbar: Incomplete
    figmgr: Incomplete
    def __init__(self, num, figure) -> None: ...
    def GetToolBar(self): ...
    def get_figure_manager(self): ...

def show() -> None: ...
def new_figure_manager(num, *args, **kwargs): ...

class GameraFigureManager(backend_bases.FigureManagerBase):
    frame: Incomplete
    window: Incomplete
    tb: Incomplete
    def __init__(self, canvas, num, frame) -> None: ...
    def destroy(self, *args) -> None: ...
