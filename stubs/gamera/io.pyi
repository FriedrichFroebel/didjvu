from types import *
from . import pstat as pstat
from _typeshed import Incomplete

def wrap(f): ...
def cd(directory) -> None: ...
def pwd(): ...

pwd: Incomplete

def ls(d: str = ...) -> None: ...
def rename(source, dest) -> None: ...
def get(namepatterns, verbose: int = ...): ...
def getstrings(namepattern, verbose: int = ...): ...
def getcsv(namepatterns, delimiter: str = ..., verbose: int = ...): ...
def getrec(namepattern, verbose: int = ...): ...
def put(outlist, fname, writetype: str = ..., oneperline: int = ..., delimiter: str = ...) -> None: ...
def isstring(x): ...
def aget(namepattern, verbose: int = ...): ...
def aput(outarray, fname, writetype: str = ..., delimit: str = ...) -> None: ...
def bget(imfile, shp: Incomplete | None = ..., unpackstr=..., bytesperpixel: float = ..., sliceinit: int = ...): ...
def CORget(infile): ...
def mincget(imfile, unpackstr=..., shp: Incomplete | None = ...): ...
def brikget(imfile, unpackstr=..., shp: Incomplete | None = ...): ...
def mghbget(imfile, numslices: int = ..., xsize: int = ..., ysize: int = ..., unpackstr=..., bytesperpixel: float = ..., sliceinit: int = ...): ...
def braw(fname, btype, shp: Incomplete | None = ...): ...
def glget(fname, btype): ...
def mget(fname, btype): ...
def mput(outarray, fname, writeheader: int = ..., btype=...) -> None: ...
def bput(outarray, fname, writeheader: int = ..., packtype=..., writetype: str = ...) -> None: ...
def mrget(fname, datatype=...): ...
def quickload(fname, linestocut: int = ...): ...
def writedelimited(listoflists, delimiter, file, writetype: str = ...) -> None: ...
def writecc(listoflists, file, writetype: str = ..., extra: int = ...) -> None: ...
def writefc(listoflists, colsize, file, writetype: str = ...) -> None: ...
def load(fname, lines_to_ignore: int = ..., type: str = ...): ...
def find_dirs(sourcedir): ...
save = aput

def binget(fname, btype: Incomplete | None = ...): ...
def binput(outarray, fname, packtype: Incomplete | None = ..., writetype: str = ...) -> None: ...
def getafniparam(headfilename, paramname): ...
def add2afnihistory(headfilename, newtext) -> None: ...
def array2afni(d, brikprefix, voltype: Incomplete | None = ..., TR: int = ..., sliceorder: str = ..., geomparent: Incomplete | None = ..., view: Incomplete | None = ..., corrlength: int = ..., briklabels: Incomplete | None = ..., historytext: Incomplete | None = ...) -> None: ...
def makeDType(exemplar): ...
