from gamera.plugin import *
from _typeshed import Incomplete

class ExtractFloatChannel(PluginFunction):
    self_type: Incomplete
    return_type: Incomplete
    doc_examples: Incomplete

class ExtractGreyscaleChannel(PluginFunction):
    self_type: Incomplete
    return_type: Incomplete
    doc_examples: Incomplete

class hue(ExtractFloatChannel): ...
class saturation(ExtractFloatChannel): ...
class value(ExtractFloatChannel): ...
class cie_x(ExtractFloatChannel): ...
class cie_y(ExtractFloatChannel): ...
class cie_z(ExtractFloatChannel): ...
class cie_Lab_L(ExtractFloatChannel): ...
class cie_Lab_a(ExtractFloatChannel): ...
class cie_Lab_b(ExtractFloatChannel): ...
class cyan(ExtractGreyscaleChannel): ...
class magenta(ExtractGreyscaleChannel): ...
class yellow(ExtractGreyscaleChannel): ...
class red(ExtractGreyscaleChannel): ...
class green(ExtractGreyscaleChannel): ...
class blue(ExtractGreyscaleChannel): ...

class false_color(PluginFunction):
    self_type: Incomplete
    args: Incomplete
    return_type: Incomplete
    author: str
    doc_examples: Incomplete
    def __call__(self, colormap: int = ...): ...
    __call__: Incomplete

class colors_to_labels(PluginFunction):
    self_type: Incomplete
    return_type: Incomplete
    args: Incomplete
    author: str
    def __call__(self, dict: Incomplete | None = ...): ...
    __call__: Incomplete

class ColorModule(PluginModule):
    category: str
    cpp_headers: Incomplete
    functions: Incomplete
    author: str
    url: str

module: Incomplete
