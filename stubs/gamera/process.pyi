from types import *
from .args import *
from .util import Set as Set
from _typeshed import Incomplete

def find_method_dependencies(method): ...

class Process:
    base_filename: Incomplete
    display_only: Incomplete
    current_step: int
    def __init__(self, base_filename, display_only: int = ...) -> None: ...
    def get_step_number(self, step, default: int = ...): ...
    def get_filename(self, extension): ...
    def process(self, first_step: Incomplete | None = ..., last_step: Incomplete | None = ..., save_members: Incomplete | None = ...) -> None: ...
    def __next__(self): ...
    def saveable_members(self): ...
    steps: Incomplete

class ProcessWizard(Wizard):
    shell: Incomplete
    parent: Incomplete
    locals: Incomplete
    process: Incomplete
    caption: Incomplete
    init_args: Incomplete
    dlg_select_steps: Incomplete
    def __init__(self, shell, locals, process) -> None: ...
    def cb_init(self, *args): ...
    start_step: Incomplete
    end_step: Incomplete
    saves: Incomplete
    saveables: Incomplete
    dlg_select_saves: Incomplete
    def cb_select_steps(self, all, custom, start_step, end_step): ...
    def cb_select_saves(self, *args) -> None: ...
    def done(self) -> None: ...
