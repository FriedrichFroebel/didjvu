from _typeshed import Incomplete
from collections.abc import Generator
from gamera import util as util

class GridIndex:
    grid_rect: Incomplete
    cell_width: Incomplete
    cell_height: Incomplete
    cell_ncols: Incomplete
    cell_nrows: Incomplete
    def __init__(self, glyphs, max_width: int = ..., max_height: int = ...) -> None: ...
    def add_glyph(self, glyph) -> None: ...
    def get_cell(self, row, col): ...
    def get_cell_at_glyph(self, glyph): ...
    def get_glyphs_around_glyph(self, glyph) -> Generator[Incomplete, None, None]: ...
    search_order: Incomplete

class GridIndexWithKeys(GridIndex):
    def add_glyph_by_key(self, glyph, key) -> None: ...
    def get_cell_by_key(self, row, col, key): ...
    def get_cell_at_glyph_by_key(self, glyph, key): ...
    def get_glyphs_around_glyph(self, glyph) -> Generator[Incomplete, None, None]: ...
    def get_glyphs_around_glyph_by_key(self, glyph, key) -> Generator[Incomplete, None, None]: ...
    def get_glyphs_by_key(self, key): ...
